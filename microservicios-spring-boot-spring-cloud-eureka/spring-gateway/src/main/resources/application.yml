server:
  port: 8090
  
# definition de eureka-server  
eureka:
  client:
    fetch-registry: true
    register-with-eureka: true
    service-url:
      default-zone: http://localhost:8761/eureka
  instance:
    hostname: localhost
      
# definition de resilience
resilience4j:
  circuitbreaker:
    configs:
      defecto:
        sliding-window-size: 6
        failure-rate-threshold: 50
        wait-duration-in-open-state: 20s
        permitted-number-of-calls-in-half-open-state: 4
        slow-call-rate-threshold: 50
        slow-call-duration-threshold: 2s
    instances:
      productos:
        base-config: defecto
  timelimiter:
    configs:
      defecto:
        timeout-duration: 2s
    instances:
      productos:
        base-config: defecto
    
    
    
# configuration gateway discovery      
spring:
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
      routes:
      - id: servicio-productos
        uri: lb://servicio-productos
        predicates:
        - Path=/api/productos/**
        # Reglas filter : Documentation => 
        # - Method=GET, POST  #methods de peticion tiene que ser GET o Post 
        # - Query= color, azul #methos query params color = azul
        # - Header=Content-Type, application/json  #method content-type application/json
        filters:
        - CircuitBreaker=productos
        - name: Ejemplo  #filter Ejemplo + ""GatewayFilterFactory""
          args:
            mensaje: Hola mi personaje preferido
            cookieNombre: usuario
            cookieValor: AndresGuzman
      - id: servicio-items
        uri: lb://servicio-items
        predicates:
        - Path=/api/items/**
        filters:
        - AddRequestHeader=token-reqeust, 123456
        - AddResponseHeader=token-response, 123456789
        - AddRequestParameter=nombre, andres
  application:
    name: server-gateway
    

    
    
    
    
          
          
        