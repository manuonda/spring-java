server:
  port: ${PORT:8081} #8081

spring:
  application:
    name: msvc-usuarios
  datasource:
    username: ${POSTGRES_USER:root}
    password: ${POSTGRES_PASSWORD:root}
    url: jdbc:postgresql://${DB_HOST:postgresql-container}:5432/${DB_NAME:db_course}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
      show-sql: true
  security:
    oauth2:
      client:
        registration:
          msvc-usuarios-client:  # lo tomo de SecurityConfig / redirectUri
            provider: spring
            client-id: ${CLIENT_ID:usuarios-client} #.clientId("usuarios-client")
            client-secret: ${CLIENT_SECRET:12345678} #.clientSecret("{noop}123456")
            authorization-grant-type: authorization_code
            redirect-uri: "http://127.0.0.1:8081/authorized"
            scope: read
            client-name: msvc-usuarios-client
        provider:
          spring:
            issure-uri:


  #configurcion spring cloud
  cloud:
    kubernetes:
      secrets:
        enable-api: true
      discovery:
        all-namespaces: true
  profiles:
    active: dev

#name services
#service:
#  usuarios: ${SERVICE_USUARIOS:service-usuarios:8081}

#spring boot-actuator
management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      enabled: true
      show-details: always
    probes:
      enabled: true
  health:
    livenessstate:
      enabled: true
    readinessstate:
      enabled: true
