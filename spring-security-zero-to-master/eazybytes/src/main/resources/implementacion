package com.eazybytes.springsecuritybassic.service;

import java.util.ArrayList;
import java.util.List;

import org.springframework.security.core.GrantedAuthority;
import org.springframework.security.core.authority.SimpleGrantedAuthority;
import org.springframework.security.core.userdetails.User;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.core.userdetails.UsernameNotFoundException;
import org.springframework.security.provisioning.UserDetailsManager;
import org.springframework.stereotype.Service;

import com.eazybytes.springsecuritybassic.models.Customer;
import com.eazybytes.springsecuritybassic.repository.CustomerRepository;

import lombok.AllArgsConstructor;


@Service
@AllArgsConstructor
public class CustomerUserDetailsService implements UserDetailsService{

	private CustomerRepository customerRepository;
	
	@Override
	public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {
		String userName, password = null;
		List<GrantedAuthority> authorities = new ArrayList<>();
		List<Customer> customers =  customerRepository.findByEmail(username);
		if ( customers == null || customers.isEmpty()) {
			throw new UsernameNotFoundException("User not Found");
		} else {
			userName = customers.get(0).getEmail();
			password = customers.get(0).getPwd();
			authorities.add(new SimpleGrantedAuthority(customers.get(0).getRole()));
		}
		
		return new User(userName, password, authorities);
		
	}

}
